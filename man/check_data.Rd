% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/check_data.R
\name{check_data}
\alias{check_data}
\alias{show_warnings}
\alias{show_failures}
\alias{print.phoenix_data_check}
\title{Checking Data Assumptions for Phoenix}
\usage{
check_data(
  pf_ratio = NA_real_,
  sf_ratio = NA_real_,
  pao2 = NA_real_,
  spo2 = NA_real_,
  fio2 = NA_real_,
  imv = NA_integer_,
  other_respiratory_support = NA_integer_,
  data = parent.frame()
)

show_warnings(x, test)

show_failures(x, test)

\method{print}{phoenix_data_check}(x, full_report = FALSE, ...)
}
\arguments{
\item{pf_ratio}{numeric vector for the PaO2/FiO2 ratio; PaO2 = arterial oxygen pressure; FiO2 = fraction of inspired oxygen;  PaO2 is measured in mmHg and FiO2 is from 0.21 (room air) to 1.00.}

\item{sf_ratio}{numeric vector for the SpO2/FiO2 ratio; SpO2 = oxygen saturation, measured in a percent; ratio for 92\% oxygen saturation on room air is 92/0.21 = 438.0952.}

\item{pao2}{numeric vector,  PaO2 is the arterial oxygen pressure measured in
mmHg}

\item{spo2}{numeric vector, SpO2 is oxygen saturation, measured in as a
percent, expected values are integer values between 0 and 100.  A warning
will be given for values between 0 and 1 along with any value outside of 0 to
100.  A warning is also given for values exceeding 97 as sf_ratio is only
valid for use in Phoenix if SpO2 is less than or equal to 97.}

\item{fio2}{numeric vector,  FiO2 is the fraction of inspired oxygen with
expected values between 0.21 (room air) to 1.00.}

\item{imv}{invasive mechanical ventilation; numeric or integer vector, (0 = not intubated; 1 = intubated)}

\item{other_respiratory_support}{other respiratory support; numeric or integer vector, (0 = no support; 1 = support)}

\item{data}{a \code{list}, \code{data.frame}, or \code{environment} containing the input vectors}

\item{x}{a \code{phoenix_data_check} object}

\item{test}{the name or index of the test you want}

\item{full_report}{when \code{TRUE} print all tests.  When \code{FALSE} print
only non-skipped tests.}

\item{...}{pass through}
}
\value{
\code{check_data} returns a \code{phoenix_data_check} object.  This
is a list of tests and a \code{data.frame} called "considered_data" which is
the effective data set considered.  This is an important distinction.  Say
you check \code{sf_ratio = spo2/fio2}.  The \code{check_data} will only check
the assuptions around sf_ration specifically, and will not check assumptions
about spo2 or fio2.  To get checks of all three you will need to specify all
three in the call to \code{check_data}.
}
\description{
A suite of tests for identifying potentially invalid data values in the
input data for Phoenix scoring.
}
\examples{
# Let's check the requirments for spo2, fio2, and sf_ratio
# 
# Start with a large set of spo2 and fio2 values.  This includes impossible
# values.
DF <-
  expand.grid(spo2 = c(seq(-1, 101, by = 1), NA_real_, 0.89, 0.98),
              fio2 = c(seq(0.20, 1.01, by = 0.01), NA_real_))

# build a vector of sf_ratio
DF[["sf_ratio"]] <- with(DF, spo2/fio2)

# Let's add some noise to the sf_ratio for some cases
# record the old random seed so we can reset the random number generator after
# this example
if (!exists(".Random.seed", envir = .GlobalEnv)) runif(1)
oldseed <- .Random.seed
set.seed(42)

idx <- which(!is.na(DF[["sf_ratio"]]))
idx <- sample(idx, size = floor(0.1 * length(idx)))
DF[["sf_ratio"]][idx] <- DF[["sf_ratio"]][idx] + rnorm(n = length(idx))

# add some sf_ratios where the spo2 or fio2 is NA
idx <- which(is.na(DF[["sf_ratio"]]))
idx <- sample(idx, size = floor(0.5 * length(idx)))
DF[["sf_ratio"]][idx] <- runif(n = length(idx), min = 0, max = 100/0.21)
DF[["sf_ratio"]][max(idx)] <- DF[["sf_ratio"]][max(idx)] + 1

# reset the random number generator
.Random.seed <- oldseed

# Now, let's check the data
chk <-
  check_data(fio2 = fio2, spo2 = spo2, sf_ratio = sf_ratio, data = DF)

chk
print(chk, full_report = TRUE)
summary(chk)

show_warnings(chk, test = 5) |> summary()
show_warnings(chk, test = "0 <= spo2 <= 100") |> summary()
show_failures(chk, test = "0 <= spo2 <= 100")$spo2 |> table()

DF[chk[["0 <= spo2 <= 100"]]$fail, ]
}
